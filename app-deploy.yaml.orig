apiVersion: appsody.dev/v1beta1
kind: AppsodyApplication
metadata:
  annotations:
    architecture: x86_64
    authoritative-source-url: registry.access.redhat.com
    build-date: 2019-10-29T16:44:53.794580
    commit.image.appsody.dev/author: olazzizz <onofrio.lazzizzera@gmail.com>
    commit.image.appsody.dev/committer: olazzizz <onofrio.lazzizzera@gmail.com>
    commit.image.appsody.dev/contextDir: /labs/appsody-apps/quote-backend
    commit.image.appsody.dev/date: Mon Mar 2 20:17:43 2020 +0400
    commit.image.appsody.dev/message: Test Kabanero Collection created
    commit.stack.appsody.dev/author: Steve Groeger <groeges@uk.ibm.com>
    commit.stack.appsody.dev/committer: GitHub <noreply@github.com>
    commit.stack.appsody.dev/contextDir: /incubator/java-spring-boot2
    commit.stack.appsody.dev/date: Tue Mar 10 21:35:36 2020 +0000
    commit.stack.appsody.dev/message: 'Merge pull request #313 from groeges/release-0.6'
    description: This image is the Kabanero development container for the java-spring-boot2
      stack
    distribution-scope: public
    image.opencontainers.org/created: "2020-03-11T16:48:30+04:00"
    image.opencontainers.org/documentation: https://github.com/olazzizz/sample-repo
    image.opencontainers.org/revision: a9a8a7dbced428cdff2caa015fbada6f961b60cc-modified
    image.opencontainers.org/source: https://github.com/olazzizz/sample-repo/tree/master
    image.opencontainers.org/url: https://github.com/olazzizz/sample-repo
    k8s.io/description: The Universal Base Image is designed and engineered to be
      the base layer for all of your containerized applications, middleware and utilities.
      This base image is freely redistributable, but Red Hat only supports Red Hat
      technologies through subscriptions for Red Hat products. This image is maintained
      by Red Hat and updated regularly.
    k8s.io/display-name: Red Hat Universal Base Image 8
    maintainer: Red Hat, Inc.
    name: kabanero/java-spring-boot2
    openshift.io/expose-services: ""
    openshift.io/tags: base rhel8
    redhat.com/build-host: cpt-1002.osbs.prod.upshift.rdu2.redhat.com
    redhat.com/component: ubi8-container
    redhat.com/license_terms: https://www.redhat.com/en/about/red-hat-end-user-license-agreements#UBI
    release: "277"
    stack.appsody.dev/authors: Erin Schnabel <schnabel@us.ibm.com>, Ozzy Osborne <ozzy@ca.ibm.com>
    stack.appsody.dev/configured: docker.io/kabanero/java-spring-boot2:0.3
    stack.appsody.dev/created: "2020-03-10T21:44:39Z"
    stack.appsody.dev/description: Spring Boot using OpenJ9 and Maven
    stack.appsody.dev/documentation: https://github.com/kabanero-io/collections/tree/master/incubator/java-spring-boot2/README.md
    stack.appsody.dev/licenses: Apache-2.0
    stack.appsody.dev/revision: 5f7634c970b880bef90eeea4288153249e172d61
    stack.appsody.dev/source: https://github.com/kabanero-io/collections/tree/master/incubator/java-spring-boot2/image
    stack.appsody.dev/tag: docker.io/kabanero/java-spring-boot2:0.3.24
    stack.appsody.dev/title: Spring BootÂ®
    stack.appsody.dev/url: https://github.com/kabanero-io/collections/tree/master/incubator/java-spring-boot2
    summary: Image for Kabanero java-spring-boot2 development
    url: https://access.redhat.com/containers/#/registry.access.redhat.com/ubi8/images/8.1-277
    vcs-ref: c42933bcdbf9f1c232e981a5e40de257c3534c8e
    vcs-type: git
    vendor: Kabanero
    version: 0.3.23
  creationTimestamp: null
  labels:
    image.opencontainers.org/title: quote-backend
    stack.appsody.dev/id: java-spring-boot2
    stack.appsody.dev/version: 0.3.24
  name: quote-backend
  namespace: kabanero
spec:
  applicationImage: image-registry.openshift-image-registry.svc:5000/kabanero/quote-backend:v1
  createKnativeService: false
  expose: true
  livenessProbe:
    failureThreshold: 12
    httpGet:
      path: /actuator/liveness
      port: 8080
    initialDelaySeconds: 5
    periodSeconds: 2
  monitoring:
    endpoints:
    - path: /actuator/prometheus
    labels:
      k8s-app: quote-backend
  readinessProbe:
    failureThreshold: 12
    httpGet:
      path: /actuator/health
      port: 8080
    initialDelaySeconds: 5
    periodSeconds: 2
    timeoutSeconds: 1
  service:
    annotations:
      prometheus.io/path: /actuator/prometheus
      prometheus.io/scrape: "true"
    port: 8080
    type: NodePort
  stack: java-spring-boot2
  version: 1.0.0
